BitCoin BlockChain 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
For Establishing Trust:
-> Validate --- Verify --- Consensus(for confirmation of Transaction) --- Immutable Recording(cannot be tampered)

UnSpent Transaction Output (UTXO):
Structure: 
-> Unique ID of the transaction that created the UTXO
-> Index of the UTXO in the transaction's output list
-> Value (amount)
-> Optional: Conditions under which the output can be spent (Script)

Transaction(Tx):
Structure:
-> Reference number of the current transaction
-> Reference to one or more input UTXOs
-> Reference to one or more output UTXOs newly generated by the current transaction.
-> Total input amount and output amount.

-> The algorithm for consensus in the Bitcoin blockchain is called Proof Of Work protocol (It gets its name because it involves “work” or computational power to solve the puzzle and to claim the right to form the next block).
-> Miners, take on added work or computation to verify transactions, broadcast transactions, compete to claim the right to create a block, work on reaching consensus by validating the block, broadcasting the newly created block and confirming transactions.
-> Transaction 0 in every block in the bitcoin blockchain is for paying the miner fees, does not have any input UTXO, is called the coinbase transaction.
-> Bitcoin Blockchain supports an optional and special feature called Scripts for Conditional Transfer of  Values. Ethereum BlockChain extended this scripting feature into a full blown Code Execution Framework called Smart Contract.

Three types of BlockChain:

Based on Business Logic:
Type 1 -> Deals with Only CryptoCurencies (Example: BitCoin Blockchain)
Type 2 -> Deals with CryptoCurrencies and Business Logic (Example: Ethereum BlockChain)
Type 3 -> Deals with Only Business Logic (Example: the linux foundation's, HyperLedger)

Based on Access Limits:
Public -> The BlockChain is accessible to all the participants and participants can join and leave the blockchain as and when they wish(Example : Bitcoin BlockChain)
Private -> Access is limited to participants within an organization. This simplifies capabilities like Block Creation and Consensus mechanism.
Permissioned/Consortium -> Has the benefits of Public Blockchain with allowing only users with permission to collaborate and transact.

Ethereum Blockchain:
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-> The Centerpiece and thrust of Ethereum Blockchain is Smart Contracts.
-> Smart Contracts in turn enable Decentralized Applications(DAPPS) that accomplish more than a transfer of value.
-> A Smart Contract is a piece of code deployed in the BlockChain node. Execution of a smart contract is initiated by a message embedded in the transaction.
-> Every node in Ethereum network should be able to execute the code irrespective of that underlying type of hardware or operating system. Enter Ethereum Virtual Machine(EVM).
-> A smart contract written a high level programming language is translated into EVM byte code, and then, deployed on the Ethereum Virtual Machine, EVM. 
-> The code for the smart contract is written in a high level language like Solidity and compiled into byte code
-> Every node will host the same smart contract code on the EVM.

Two Types of Accounts:
Externally Owned Accounts(EOA) : 
-> Controlled by Private Keys
-> An externally owned account is needed to participate in the Ethereum network. It interacts with the blockchain using transactions.
Contract Accounts : 
-> Controlled by the Code and can be activated only by the EOA.

-> The account is the originator and the target of a transaction.
->  Every account has a coin balance. 
-> The participant node can send transaction for Ether transfer or it can send transaction to invoke a smart contract code or both. 
-> Both types of transaction require fees. An account must have sufficient balance to meet the fees needed for the transactions activated. 
-> Fees are paid in Wei. 
-> Wei is a lower denomination of Ether. One Ether is 10^18 Weis.

Transaction in Ethereum:
Structure:
-> Reciepient
-> Signature of sender authorizing transfer
-> Amount of Wei
-> Message to a contract
-> STARTGAS (max number of computational steps)
-> GASPRICE (fee for computations)

Ethereum Block Structure:
-> Header
-> Transactions
-> Runner-up block headers 

-> Transaction validation involves checking the time-stamp and the nonce combination to be valid and the availability of sufficient fees for execution.
->  Miner nodes in the network receive, verify, gather and execute transactions.

GAS:
-> Every action in Ethereum requires crypto fuel, or gas. Gas points are used to specify the fees inside of Ether, for ease of computation using standard values. 
-> Ether, as a cryptocurrency, varies in value with market swings, but gas points do not vary. 
-> Ethereum has specified gas points for each type of operation. Mining process computes gas points required for execution of a transaction.
-> If the fee specified and the gas point in the transaction are not sufficient, it is rejected.
-> The gas points needed for execution must be in the account balance for the execution to happen. If there is any amount left over after the execution of a transaction, it is returned to the originating account. 

GAS Limit:
-> Gas limit is the amount of gas points available for a block to spend.
-> Gas spent is the actual amount of gas spent at the completion of the block creation.

Mining Incentive Model:
-> The proof of work puzzle winner, miner that creates a new block, is incentivized with the base fees of three Ethers, and the transaction fees in Ethereum blockchain. 
-> The winning miner also gets the fees, gas points for execution of a smart contract transactions. 
-> That there may be other miners who also solve the puzzle besides the winner. 
-> These miners will solve the puzzle, but didn't win the block are called Ommers. 
-> The blocks created by them are called Ommer Blocks. 
-> These are added as Ommer Blocks, or side blocks, to the main chain. 
-> Ommer miners also get a small percentage of the total gas points as a consolation and for network security.

