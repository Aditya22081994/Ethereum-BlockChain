Event Handling:
-> Events are useful for pushing notification to indicate completion of a smart contract operation, say the execution of a transfer. 
-> Events can be used to notify any event occurrence within a smart contract and the blockchain. 
-> Events are useful for logging activities of a smart contract. 
-> In this role, event logging is like your printf or console log. 
-> Logs can be reviewed to audit the functioning of a smart contract. Event enables asynchronous operations between an event sender and the receiver. 
-> Event framework is an efficient alternative for polling to check if a request has been completed.
->  You define an event by its name and parameters. 
-> An event can be parameterized like a function.
-> You invoke an event by its name and actual parameter values. 
-> This will push or log an event occurrence for its listeners.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Oraclize :
-> A smart contract operates in a sandbox. 
-> It cannot call outside function or link to an external resource.
-> It access external resources by using a special smart contract called using oraclize.

Why can't a smart contract access outside sources? 
-> Depending on the source code it may affect the global consistency of the blockchain.
-> The results of an operation on the blockchain has to be deterministic. 
-> These conditions limit the applicability of the smart contracts in many real world applications that may involve obtaining facts, data, and assets from external world sources. 
-> Moreover, the data has to be obtained at the time of execution and may not be available at the time of deployment of the contract. 
-> As an example, the stock market data, high and low price of a stock on a particular date, on NASDAQ market. 

-> The oraclize concept addresses this problem of fetching external data from a smart contract.
->  Merriam-Webster's definition of oracle is, an authoritative or wise expression or answer. 
-> This definition very closely defines the rule of oraclized service in the smart contract dApp development. 
-> Oraclize is described as a data carrier between the web resources, APIs and the URLs, and the smart contract. 
-> Oraclize is outside the blockchain protocol. 
-> However, it is a useful component of dApps that facilitate the availability of real world facts needed for the functioning of certain smart contracts. 

How do we use oraclize service? 
-> UsingOraclize is a smart contract that provides minimally a query function to access external sources. 
-> It not only fetches the data, but it also provides proofs and authentication about the sources if needed by calling the smart contract. 
-> The data requested is returned through a callback function since accessing the data and verification may take some time. 
-> We do not want the blockchain smart contract waiting on results.
-> Since it may take time to fetch the data, a call back function is provided so that it can invoked when the required data has been fetched. 
-> UsingOraclize accesses the external data source, authenticates and sends the data with the proof to the originating smart contract. 

